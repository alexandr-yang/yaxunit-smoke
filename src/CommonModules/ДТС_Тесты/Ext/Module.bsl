
#Область СлужебныйПрограммныйИнтерфейс

#Область ОписанияТестов 

// 
////
Функция ОписаниеТестаОткрытьФормуСписка(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСписка";
    ОписаниеТеста.Представление = "Открыть форму списка";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуВыбора(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуВыбора";
    ОписаниеТеста.Представление = "Открыть форму выбора";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуОбъекта(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуОбъекта";
    ОписаниеТеста.Представление = "Открыть форму объекта";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуСуществующегоОбъекта(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСуществующегоОбъекта";
    ОписаниеТеста.Представление = "Открыть форму существующего объекта";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуСуществующегоПроведенногоОбъекта(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСуществующегоПроведенногоОбъекта";
    ОписаниеТеста.Представление = "Открыть форму существующего проведенного объекта";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуВыбораГруппы(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуВыбораГруппы";
    ОписаниеТеста.Представление = "Открыть форму выбора группы";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуГруппы(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуГруппы";
    ОписаниеТеста.Представление = "Открыть форму группы";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуСуществующейГруппы(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСуществующейГруппы";
    ОписаниеТеста.Представление = "Открыть форму существующей группы";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуЗаписи(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуЗаписи";
    ОписаниеТеста.Представление = "Открыть форму записи";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуСуществующейЗаписи(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСуществующейЗаписи";
    ОписаниеТеста.Представление = "Открыть форму существующей записи";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуЗагрузки(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуЗагрузки";
    ОписаниеТеста.Представление = "Открыть форму загрузки";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуСохранения(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуСохранения";
    ОписаниеТеста.Представление = "Открыть форму сохранения";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуВарианта(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуВарианта";
    ОписаниеТеста.Представление = "Открыть форму варианта";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФормуНастроек(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьФормуНастроек";
    ОписаниеТеста.Представление = "Открыть форму настроек";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьФорму(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "_ОткрытьФорму";
    ОписаниеТеста.Представление = "Открыть форму";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаОткрытьОбщуюФорму(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ОткрытьОбщуюФорму";
    ОписаниеТеста.Представление = СтрШаблон("Открыть общую форму (%1)", ОписаниеМетаданных.Имя);
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаПроверитьМакетСКД(ОписаниеМетаданных, Макет) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ПроверитьМакетСКД";
    ОписаниеТеста.Представление = СтрШаблон("Проверить макет СКД (%1)", Макет);
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Параметры.Макет = Макет;
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаПроверитьОбщийМакетСКД(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ПроверитьОбщийМакетСКД";
    ОписаниеТеста.Представление = СтрШаблон("Проверить общий макет СКД (%1)", ОписаниеМетаданных.Имя);
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаЗаписатьСуществующийОбъект(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ЗаписатьСуществующийОбъект";
    ОписаниеТеста.Представление = "Записать существующий объект";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаЗаписатьСуществующуюГруппу(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ЗаписатьСуществующуюГруппу";
    ОписаниеТеста.Представление = "Записать существующую группу";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаПровестиСуществующийОбъект(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ПровестиСуществующийОбъект";
    ОписаниеТеста.Представление = "Провести существующий объект";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаСкопироватьСуществующийОбъект(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "СкопироватьСуществующийОбъект";
    ОписаниеТеста.Представление = "Скопировать существующий объект";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаСкопироватьСуществующуюГруппу(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "СкопироватьСуществующуюГруппу";
    ОписаниеТеста.Представление = "Скопировать существующую группу";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаПроверитьПравоИнтерактивноеУдаление(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ПроверитьПравоИнтерактивноеУдаление";
    ОписаниеТеста.Представление = "Проверить право (ИнтерактивноеУдаление)";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ОписаниеТестаПроверитьПравоИнтерактивноеУдалениеПомеченных(ОписаниеМетаданных) Экспорт 
    
    ОписаниеТеста = ОписаниеТеста();
    ОписаниеТеста.Метод = "ПроверитьПравоИнтерактивноеУдалениеПомеченных";
    ОписаниеТеста.Представление = "Проверить право (ИнтерактивноеУдалениеПомеченных)";
    ЗаполнитьЗначенияСвойств(ОписаниеТеста.Параметры, ОписаниеМетаданных);
    ОписаниеТеста.Идентификатор = ИдентификаторТеста(ОписаниеТеста);
    Возврат ОписаниеТеста;
    
КонецФункции

#КонецОбласти

#Область Тесты

// 
////
Процедура ОткрытьФормуСписка(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаСписка");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуВыбора(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаВыбора");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуОбъекта(Параметры, ПараметрыОтбора = Неопределено) Экспорт 
    
    Ссылка = Неопределено;
    
    Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
        Ссылка = ДТС_СлучайныеДанныеСервер.СлучайнаяСсылка(
            Параметры.Тип, 
            Параметры.Имя, 
            ПараметрыОтбора
        );
        
        Если Ссылка = Неопределено Тогда
            ЮТест.Пропустить("Недостаточно данных");
            Возврат;
        КонецЕсли;
    КонецЕсли;
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаОбъекта");
    ОткрытьЗакрытьФорму(ИмяФормы, Ссылка);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуВыбораГруппы(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаВыбораГруппы");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуГруппы(Параметры, ПараметрыОтбора = Неопределено) Экспорт 
    
    Ссылка = Неопределено;
    
    Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
        Ссылка = ДТС_СлучайныеДанныеСервер.СлучайнаяСсылка(
            Параметры.Тип, 
            Параметры.Имя, 
            ПараметрыОтбора
        );
        
        Если Ссылка = Неопределено Тогда
            ЮТест.Пропустить("Недостаточно данных");
            Возврат;
        КонецЕсли;
    КонецЕсли;
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаГруппы");
    ОткрытьЗакрытьФорму(ИмяФормы, Ссылка);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуЗаписи(Параметры, ПараметрыОтбора = Неопределено) Экспорт 
    
    КлючиЗаписи = Неопределено;
    
    Если ЗначениеЗаполнено(ПараметрыОтбора) Тогда
        КлючиЗаписи = ДТС_СлучайныеДанныеСервер.СлучайнаяЗапись(
            Параметры.Тип, 
            Параметры.Имя, 
            ПараметрыОтбора
        );
        
        Если КлючиЗаписи = Неопределено Тогда
            ЮТест.Пропустить("Недостаточно данных");
            Возврат;
        КонецЕсли;
    КонецЕсли;
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаЗаписи");
    ОткрытьЗакрытьФорму(ИмяФормы, КлючиЗаписи);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуЗагрузки(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаЗагрузки");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуСохранения(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаСохранения");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуВарианта(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаВарианта");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуНастроек(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "ФормаНастроек");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФорму_(Параметры) Экспорт 
    
    ИмяФормы = ИмяФормы(Параметры.Тип, Параметры.Имя, "Форма");
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ОткрытьОбщуюФорму(Параметры) Экспорт 
    
    ИмяФормы = ИмяОбщейФормы(Параметры.Имя);
    ОткрытьЗакрытьФорму(ИмяФормы);
    
КонецПроцедуры

// 
////
Процедура ПроверитьМакетСКД(Параметры) Экспорт 
    
    ДТС_ТестыСервер.ПроверитьМакетСКД(Параметры);
    
КонецПроцедуры

// 
////
Процедура ПроверитьОбщийМакетСКД(Параметры) Экспорт 
    
    ДТС_ТестыСервер.ПроверитьОбщийМакетСКД(Параметры);
    
КонецПроцедуры

// 
////
Процедура ПроверитьПраво(ОписаниеМетаданных, Право, ОжидаемыйРезультат = Ложь, ПроверятьОсновныеРоли = Ложь) Экспорт 
    
    ДТС_ТестыСервер.ПроверитьПраво(
        ОписаниеМетаданных,
        Право, 
        ОжидаемыйРезультат,
        ПроверятьОсновныеРоли
    );
    
КонецПроцедуры

// 
////
Процедура ЗаписатьОбъект(Параметры, ПараметрыОтбора) Экспорт 
    
    Ссылка = ДТС_СлучайныеДанныеСервер.СлучайнаяСсылка(
        Параметры.Тип, 
        Параметры.Имя, 
        ПараметрыОтбора
    );
    
    Если Ссылка = Неопределено Тогда
        ЮТест.Пропустить("Недостаточно данных");
        Возврат;
    КонецЕсли;
    
    ДТС_ТестыСервер.ЗаписатьОбъект(Ссылка);
    
КонецПроцедуры

// 
////
Процедура ПровестиОбъект(Параметры, ПараметрыОтбора) Экспорт 
    
    Ссылка = ДТС_СлучайныеДанныеСервер.СлучайнаяСсылка(
        Параметры.Тип, 
        Параметры.Имя, 
        ПараметрыОтбора
    );
    
    Если Ссылка = Неопределено Тогда
        ЮТест.Пропустить("Недостаточно данных");
        Возврат;
    КонецЕсли;
    
    ДТС_ТестыСервер.ПровестиОбъект(Ссылка);
    
КонецПроцедуры

// 
////
Процедура СкопироватьОбъект(Параметры, ПараметрыОтбора) Экспорт 
    
    Ссылка = ДТС_СлучайныеДанныеСервер.СлучайнаяСсылка(
        Параметры.Тип, 
        Параметры.Имя, 
        ПараметрыОтбора
    );
    
    Если Ссылка = Неопределено Тогда
        ЮТест.Пропустить("Недостаточно данных");
        Возврат;
    КонецЕсли;
    
    ДТС_ТестыСервер.СкопироватьОбъект(Ссылка);
    
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// 
////
Функция ОписаниеТеста() 
    
    ОписаниеТеста = Новый Структура();
    ОписаниеТеста.Вставить("Метод", "");
    ОписаниеТеста.Вставить("Представление", "");
    ОписаниеТеста.Вставить("Идентификатор", "");
    ОписаниеТеста.Вставить("Параметры", ПараметрыОписанияТеста());
    Возврат ОписаниеТеста;
    
КонецФункции

// 
////
Функция ПараметрыОписанияТеста() 
    
    ПараметрыОписанияТеста = Новый Структура;
    ПараметрыОписанияТеста.Вставить("Тип", "");
    ПараметрыОписанияТеста.Вставить("Имя", "");
    ПараметрыОписанияТеста.Вставить("Макет", "");
    ПараметрыОписанияТеста.Вставить("Иерархический", Ложь);
    ПараметрыОписанияТеста.Вставить("Подчиненный", Ложь);
    ПараметрыОписанияТеста.Вставить("Периодический", Ложь);
    Возврат ПараметрыОписанияТеста;
    
КонецФункции

// 
////
Функция ИдентификаторТеста(ОписаниеТеста) 
    
    Макет = "";
    
    Если ЗначениеЗаполнено(ОписаниеТеста.Параметры.Макет) Тогда
        Макет = СтрШаблон(".%1", ОписаниеТеста.Параметры.Макет);
    КонецЕсли;
    
    Возврат СтрШаблон("%1.%2.%3%4", 
        ОписаниеТеста.Параметры.Тип, 
        ОписаниеТеста.Параметры.Имя, 
        ОписаниеТеста.Метод, 
        Макет
    );
    
КонецФункции

// 
////
Функция ИмяФормы(Тип, Имя, ИмяФормы) 
    
    Возврат СтрШаблон("%1.%2.%3", Тип, Имя, ИмяФормы);
    
КонецФункции

// 
////
Функция ИмяОбщейФормы(ИмяФормы) 
    
    Возврат СтрШаблон("ОбщаяФорма.%1", ИмяФормы);
    
КонецФункции

// 
////
Функция ЭтоУправляемаяФорма(Форма) 
    
    Возврат ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения");
    
КонецФункции

// 
////
Процедура ОткрытьЗакрытьФорму(ИмяФормы, Ключ = Неопределено) 
    
    Параметры = Новый Структура("Ключ", Ключ);
    Форма = ПолучитьФорму(ИмяФормы, Параметры, , Новый УникальныйИдентификатор); // BSLLS:GetFormMethod-off
    
    Если Форма = Неопределено Тогда
        ВызватьИсключение "Не удалось получить форму";
    КонецЕсли;
    
    Форма.Открыть();
    
    Если Форма.Открыта() Тогда
        Если ЭтоУправляемаяФорма(Форма) Тогда
            Форма.ОбновитьОтображениеДанных();
        Иначе
            Форма.Обновить();
        КонецЕсли;
        
        Форма.Модифицированность = Ложь;
        Форма.Закрыть();
        
        Если Форма.Открыта() Тогда
            ВызватьИсключение "Не удалось закрыть форму";
        КонецЕсли;
    Иначе
        ВызватьИсключение "Не удалось открыть форму";
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти
