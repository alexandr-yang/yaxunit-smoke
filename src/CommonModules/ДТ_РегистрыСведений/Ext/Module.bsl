
#Область СлужебныйПрограммныйИнтерфейс

#Область Тесты

// 
////
Процедура ОткрытьФормуСписка(Параметры) Экспорт 
    
    ДТС_Тесты.ОткрытьФормуСписка(Параметры);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуЗаписи(Параметры) Экспорт 
    
    ДТС_Тесты.ОткрытьФормуЗаписи(Параметры);
    
КонецПроцедуры

// 
////
Процедура ОткрытьФормуСуществующейЗаписи(Параметры) Экспорт 
    
    ПараметрыОтбора = ДТС_Настройки.ПараметрыОтбораРегистраСведений(Параметры);
    ДТС_Тесты.ОткрытьФормуЗаписи(Параметры, ПараметрыОтбора);
    
КонецПроцедуры

// 
////
Процедура ПроверитьМакетСКД(Параметры) Экспорт 
    
    ДТС_Тесты.ПроверитьМакетСКД(Параметры);
    
КонецПроцедуры

#КонецОбласти

// 
////
Процедура ИсполняемыеСценарии() Экспорт 
    
    Если ДТС_Настройки.Пропустить(ИдентификаторМодуля()) Тогда
        Возврат;
    КонецЕсли;
    
    МетаданныеРегистрыСведений = ДТС_МетаданныеСервер.МетаданныеРегистровСведений();
    
    Для Каждого ОписаниеМетаданных Из МетаданныеРегистрыСведений Цикл
        Если ДТС_Настройки.Пропустить(ОписаниеМетаданных.Идентификатор) Тогда
            Продолжить;
        КонецЕсли;
        
        НаборТестов = ДТС_НаборыТестов.НаборТестовРегистраСведений(ОписаниеМетаданных);
        ДТС_НаборыТестов.ДобавитьНаборТестов(
            ОписаниеМетаданных.Идентификатор, 
            ОписаниеМетаданных.Представление, 
            НаборТестов
        );
    КонецЦикла;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// 
////
Функция ИдентификаторМодуля() 
    
    Возврат "РегистрСведений";
    
КонецФункции

#КонецОбласти
