
#Область СлужебныйПрограммныйИнтерфейс

#Область Метаданные 

//
////
Функция МетаданныеСправочники() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Справочник Из Метаданные.Справочники Цикл
        Массив.Добавить(ОписаниеСправочника(Справочник));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеДокументы() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Документ Из Метаданные.Документы Цикл
        Массив.Добавить(ОписаниеДокумента(Документ));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеЖурналыДокументов() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ЖурналДокументов Из Метаданные.ЖурналыДокументов Цикл
        Массив.Добавить(ОписаниеЖурналаДокументов(ЖурналДокументов));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

//
////
Функция МетаданныеПеречисления() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Перечисление Из Метаданные.Перечисления Цикл
        Массив.Добавить(ОписаниеПеречисления(Перечисление));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

//
////
Функция МетаданныеОтчеты() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Отчет Из Метаданные.Отчеты Цикл
        Массив.Добавить(ОписаниеОтчета(Отчет));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

//
////
Функция МетаданныеОбработки() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Обработка Из Метаданные.Обработки Цикл
        Массив.Добавить(ОписаниеОбработки(Обработка));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеПланыВидовХарактеристик() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ПланВидовХарактеристик Из Метаданные.ПланыВидовХарактеристик Цикл
        Массив.Добавить(ОписаниеПланаВидовХарактеристик(ПланВидовХарактеристик));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеПланыСчетов() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ПланСчетов Из Метаданные.ПланыСчетов Цикл
        Массив.Добавить(ОписаниеПланаСчетов(ПланСчетов));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеПланыВидовРасчета() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ПланВидовРасчета Из Метаданные.ПланыВидовРасчета Цикл
        Массив.Добавить(ОписаниеПланаВидовРасчета(ПланВидовРасчета));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеРегистрыСведений() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого РегистрСведений Из Метаданные.РегистрыСведений Цикл
        Массив.Добавить(ОписаниеРегистраСведений(РегистрСведений));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеРегистрыНакопления() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого РегистрНакопления Из Метаданные.РегистрыНакопления Цикл
        Массив.Добавить(ОписаниеРегистраНакопления(РегистрНакопления));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеРегистрыБухгалтерии() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого РегистрБухгалтерии Из Метаданные.РегистрыБухгалтерии Цикл
        Массив.Добавить(ОписаниеРегистраБухгалтерии(РегистрБухгалтерии));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеРегистрыРасчетов() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого РегистрРасчетов Из Метаданные.РегистрыРасчета Цикл
        Массив.Добавить(ОписаниеРегистраРасчетов(РегистрРасчетов));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеБизнесПроцессы() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого БизнесПроцесс Из Метаданные.БизнесПроцессы Цикл
        Массив.Добавить(ОписаниеБизнесПроцесса(БизнесПроцесс));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеЗадачи() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого Документ Из Метаданные.Задачи Цикл
        Массив.Добавить(ОписаниеЗадачи(Документ));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеПланыОбмена() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ПланОбмена Из Метаданные.ПланыОбмена Цикл
        Массив.Добавить(ОписаниеПланаОбмена(ПланОбмена));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеКритерииОтбора() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого КритерийОтбора Из Метаданные.КритерииОтбора Цикл
        Массив.Добавить(ОписаниеКритерияОтбора(КритерийОтбора));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

// 
////
Функция МетаданныеХранилищаНастроек() Экспорт 
    
    Массив = Новый Массив;
    
    Для Каждого ХранилищеНастроек Из Метаданные.ХранилищаНастроек Цикл
        Массив.Добавить(ОписаниеХранилищаНастроек(ХранилищеНастроек));
    КонецЦикла;
    
    Возврат Массив;
    
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыиФункции

// 
////
Функция ОписаниеСправочника(Справочник) 
    
    Структура = ОписаниеОбъектаМетаданных(Справочник);
    Структура.Вставить("Иерархический", ЭтоИерархическийСправочник(Справочник));
    Структура.Вставить("Подчиненный", ЭтоПодчиненныйСправочник(Справочник));
    
    Возврат Структура;
    
КонецФункции

// 
////
Функция ОписаниеДокумента(Документ) 
    
    Возврат ОписаниеОбъектаМетаданных(Документ);
    
КонецФункции

// 
////
Функция ОписаниеЖурналаДокументов(ЖурналДокументов) 
    
    Возврат ОписаниеОбъектаМетаданных(ЖурналДокументов);
    
КонецФункции

// 
////
Функция ОписаниеПеречисления(Перечисление) 
    
    Возврат ОписаниеОбъектаМетаданных(Перечисление);
    
КонецФункции

// 
////
Функция ОписаниеОтчета(Отчет) 
    
    Возврат ОписаниеОбъектаМетаданных(Отчет);
    
КонецФункции

// 
////
Функция ОписаниеОбработки(Обработка) 
    
    Возврат ОписаниеОбъектаМетаданных(Обработка);
    
КонецФункции

// 
////
Функция ОписаниеПланаВидовХарактеристик(ПланВидовХарактеристик) 
    
    Структура = ОписаниеОбъектаМетаданных(ПланВидовХарактеристик);
    Структура.Вставить("Иерархический", ЭтоИерархическийПланВидовХарактеристик(ПланВидовХарактеристик));
    
    Возврат Структура;
    
КонецФункции

// 
////
Функция ОписаниеПланаСчетов(ПланСчетов) 
    
    Возврат ОписаниеОбъектаМетаданных(ПланСчетов);
    
КонецФункции

// 
////
Функция ОписаниеПланаВидовРасчета(ПланВидовРасчета) 
    
    Возврат ОписаниеОбъектаМетаданных(ПланВидовРасчета);
    
КонецФункции

// 
////
Функция ОписаниеРегистраСведений(РегистрСведений) 
    
    Возврат ОписаниеОбъектаМетаданных(РегистрСведений);
    
КонецФункции

// 
////
Функция ОписаниеРегистраНакопления(РегистрНакопления) 
    
    Возврат ОписаниеОбъектаМетаданных(РегистрНакопления);
    
КонецФункции

// 
////
Функция ОписаниеРегистраБухгалтерии(РегистрБухгалтерии) 
    
    Возврат ОписаниеОбъектаМетаданных(РегистрБухгалтерии);
    
КонецФункции

// 
////
Функция ОписаниеРегистраРасчетов(РегистрРасчетов) 
    
    Возврат ОписаниеОбъектаМетаданных(РегистрРасчетов);
    
КонецФункции

// 
////
Функция ОписаниеБизнесПроцесса(БизнесПроцесс) 
    
    Возврат ОписаниеОбъектаМетаданных(БизнесПроцесс);
    
КонецФункции

// 
////
Функция ОписаниеЗадачи(Задача) 
    
    Возврат ОписаниеОбъектаМетаданных(Задача);
    
КонецФункции

// 
////
Функция ОписаниеПланаОбмена(ПланОбмена) 
    
    Возврат ОписаниеОбъектаМетаданных(ПланОбмена);
    
КонецФункции

// 
////
Функция ОписаниеКритерияОтбора(КритерийОтбора) 
    
    Возврат ОписаниеОбъектаМетаданных(КритерийОтбора);
    
КонецФункции

// 
////
Функция ОписаниеХранилищаНастроек(ХранилищеНастроек) 
    
    Возврат ОписаниеОбъектаМетаданных(ХранилищеНастроек);
    
КонецФункции

// 
////
Функция ОписаниеОбъектаМетаданных(Объект)
    
    Структура = Новый Структура;
    Структура.Вставить("Имя", Объект.Имя);
    Структура.Вставить("Представление", Объект.Представление());
    
    Возврат Структура;
    
КонецФункции

// 
////
Функция ЭтоИерархическийСправочник(Справочник) 
    
    Возврат Справочник.Иерархический
        И Строка(Справочник.ВидИерархии) = "ИерархияГруппИЭлементов";
    
КонецФункции

// 
////
Функция ЭтоПодчиненныйСправочник(Справочник) 
    
    Возврат Справочник.Владельцы.Количество() > 0;
    
КонецФункции

// 
////
Функция ЭтоИерархическийПланВидовХарактеристик(ПланВидовХарактеристик) 
    
    Возврат ПланВидовХарактеристик.Иерархический;
    
КонецФункции

#КонецОбласти
