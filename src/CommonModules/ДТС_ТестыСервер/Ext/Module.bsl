
#Область СлужебныйПрограммныйИнтерфейс

// 
////
Процедура ЗаписатьОбъект(Знач Ссылка) Экспорт 
    
    Объект = Ссылка.ПолучитьОбъект();
    Объект.Записать();
    
КонецПроцедуры

// 
////
Процедура ПровестиОбъект(Знач Ссылка) Экспорт 
    
    Объект = Ссылка.ПолучитьОбъект();
    Объект.Записать(РежимЗаписиДокумента.Проведение); 
    
КонецПроцедуры

// 
////
Процедура СкопироватьОбъект(Знач Ссылка) Экспорт 
    
    Ссылка.Скопировать();
    
КонецПроцедуры

// 
////
Процедура ПроверитьМакетСКД(Знач ОписаниеМетаданных) Экспорт 
    
    МенеджерОбьекта = ДТС_МетаданныеСервер.МенеджерОбьекта(ОписаниеМетаданных.Тип, ОписаниеМетаданных.Имя);
    Макет = МенеджерОбьекта.ПолучитьМакет(ОписаниеМетаданных.Макет);
    ИнициализироватьМакетСКД(Макет);
    
КонецПроцедуры

// 
////
Процедура ПроверитьОбщийМакетСКД(Знач ОписаниеМетаданных) Экспорт 
    
    Макет = ПолучитьОбщийМакет(ОписаниеМетаданных.Имя);
    ИнициализироватьМакетСКД(Макет);
    
КонецПроцедуры

// 
////
Процедура ПроверитьПраво(Знач ОписаниеМетаданных, Знач Право, Знач ОжидаемыйРезультат, Знач ПроверятьОсновныеРоли) Экспорт 
    
    ПолноеИмя = ДТС_МетаданныеСервер.ПолноеИмя(ОписаниеМетаданных.Тип, ОписаниеМетаданных.Имя);
    МетаданныеОбъекта = Метаданные.НайтиПоПолномуИмени(ПолноеИмя);
    
    Ошибки = Новый Массив;
    
    Для Каждого Роль Из Метаданные.Роли Цикл
        Если НЕ ПроверятьОсновныеРоли И Метаданные.ОсновныеРоли.Содержит(Роль) Тогда
            Продолжить;
        КонецЕсли;
        
        Результат = ПравоДоступа(Право, МетаданныеОбъекта, Роль);
        
        Если Результат <> ОжидаемыйРезультат Тогда
            Значение = ?(Результат, "установлено", "не установлено");
            Описание = СтрШаблон("Для роли ""%1"" %2 право ""%3""", Роль.Имя, Значение, Право);
            Ошибки.Добавить(Описание);
        КонецЕсли;
    КонецЦикла;
    
    Если Ошибки.Количество() > 0 Тогда
        ОписаниеОшибки = СтрСоединить(Ошибки, Символы.ПС);
        ВызватьИсключение ОписаниеОшибки;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// 
////
Процедура ИнициализироватьМакетСКД(Макет) 
    
    ИсточникДоступныхНастроекКомпоновкиДанных = Новый ИсточникДоступныхНастроекКомпоновкиДанных(Макет);
    КомпоновщикНастроекКомпоновкиДанных = Новый КомпоновщикНастроекКомпоновкиДанных;
    КомпоновщикНастроекКомпоновкиДанных.Инициализировать(ИсточникДоступныхНастроекКомпоновкиДанных);
    
КонецПроцедуры

#КонецОбласти
